from aiogram import Router, F
from aiogram.types import Message
from app.keyboards.menus import CATALOG_BUTTON_TEXT
from app.services.brands import fuzzy_suggest  # alias to suggest_candidates

router = Router()
CATALOG_USERS: set[int] = set()

@router.message(F.text.in_({CATALOG_BUTTON_TEXT, "–ö–∞—Ç–∞–ª–æ–≥ –±—Ä–µ–Ω–¥–æ–≤", "üîé –ö–∞—Ç–∞–ª–æ–≥ –±—Ä–µ–Ω–¥–æ–≤"}))
async def catalog_enter(m: Message):
    CATALOG_USERS.add(m.from_user.id)
    await m.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±—Ä–µ–Ω–¥–∞ (–∏–ª–∏ —á–∞—Å—Ç—å) ‚Äî –ø–æ–∫–∞–∂—É –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.")

@router.message(lambda m: m.text and m.from_user and m.from_user.id in CATALOG_USERS)
async def catalog_query(m: Message):
    q = (m.text or "").strip()
    if not q:
        return
    items = fuzzy_suggest(q, top_n=15)
    if not items:
        await m.answer("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª. –ü–æ–ø—Ä–æ–±—É–π —É—Ç–æ—á–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ.")
        return
    lines = ["–ö–∞–Ω–¥–∏–¥–∞—Ç—ã:"] + [f"‚Ä¢ {it}" for it in items[:15]]
    await m.answer("\n".join(lines))
