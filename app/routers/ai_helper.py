# app/routers/ai_helper.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from app.keyboards.menus import (
    AI_ENTRY_BUTTON_TEXT,
    CATALOG_BUTTON_TEXT,
    VISION_BUTTON_TEXT,
    POSM_BUTTON_TEXT,
    ai_exit_inline_kb,
)
from app.services.ai_offline import answer_ai

router = Router()
AI_USERS: set[int] = set()

# —Ç–µ–∫—Å—Ç—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é, –∫–æ—Ç–æ—Ä—ã–µ –ò–ò —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –¥–æ–ª–∂–µ–Ω
MENU_TEXTS = {
    AI_ENTRY_BUTTON_TEXT, CATALOG_BUTTON_TEXT, VISION_BUTTON_TEXT, POSM_BUTTON_TEXT,
    "–ù–∞–∑–∞–¥", "üîô –ù–∞–∑–∞–¥", "–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è"
}

@router.message(F.text.in_({AI_ENTRY_BUTTON_TEXT, "AI —ç–∫—Å–ø–µ—Ä—Ç", "üß† AI —ç–∫—Å–ø–µ—Ä—Ç"}))
async def ai_enter(m: Message):
    AI_USERS.add(m.from_user.id)
    await m.answer(
        "AI-—Ä–µ–∂–∏–º –≤–∫–ª—é—á—ë–Ω. –ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –±—Ä–µ–Ω–¥/–ø—Ä–æ–¥–∞–∂–∏.\n"
        "–î–ª—è –≤—ã—Ö–æ–¥–∞ ‚Äî –∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        reply_markup=ai_exit_inline_kb()
    )

@router.callback_query(lambda c: c.data == "ai_exit")
async def ai_exit(c: CallbackQuery):
    AI_USERS.discard(c.from_user.id)
    await c.message.answer("AI-—Ä–µ–∂–∏–º –≤—ã–∫–ª—é—á–µ–Ω.")
    await c.answer()

# –í–ê–ñ–ù–û: –Ω–µ —Ç—Ä–æ–≥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã (/start, /help –∏ —Ç.–ø.) –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
@router.message(
    lambda m: (
        m.from_user
        and m.text
        and (m.from_user.id in AI_USERS)
        and (not m.text.startswith("/"))       # <-- –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        and (m.text not in MENU_TEXTS)         # <-- –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –º–µ–Ω—é/–Ω–∞–∑–∞–¥
    )
)
async def ai_text(m: Message):
    txt = (m.text or "").strip()
    if not txt:
        return
    reply = answer_ai(txt)
    await m.answer(reply)
